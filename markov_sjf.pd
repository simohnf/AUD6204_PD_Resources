#N canvas 0 23 855 471 10;
#X floatatom 387 32 5 0 0 0 possible_states #0-possible_states_rec
#0-possible_states_snd;
#N canvas 0 23 618 426 markov_output_logic 0;
#X obj 157 55 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 157 75 int;
#X obj 197 145 r \$0-possible_states_snd, f 12;
#X text 89 77 last state;
#X obj 145 206 uzi_sjf, f 13;
#X text 226 96 1 - read list of probabilities for that index;
#X obj 379 114 r \$0-possible_states_snd, f 12;
#X obj 319 159 *, f 13;
#X obj 152 260 +, f 33;
#X obj 152 281 tabread \$0-markov;
#X obj 152 307 tabwrite \$0-markov_layer2, f 28;
#X obj 220 231 t f f, f 16;
#X obj 157 96 t b b f, f 10;
#X obj 51 336 array random \$0-markov_layer2;
#X obj 51 357 t f f;
#X obj 51 378 outlet;
#X obj 157 23 inlet;
#X text 133 3 bang to trigger;
#X text 327 307 save it into the second array;
#X text 232 337 probability based output using the second array;
#X text 88 357 reset previous state;
#X obj 252 21 inlet;
#X text 251 2 seed;
#X connect 0 0 1 0;
#X connect 1 0 12 0;
#X connect 2 0 4 1;
#X connect 4 2 11 0;
#X connect 6 0 7 1;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 11 0 8 0;
#X connect 11 1 10 1;
#X connect 12 0 13 0;
#X connect 12 1 4 0;
#X connect 12 2 7 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 14 1 1 1;
#X connect 16 0 0 0;
#X connect 21 0 1 1;
#X restore 45 326 pd markov_output_logic;
#X floatatom 45 347 5 0 0 0 - - -;
#X obj 235 276 inlet;
#X obj 45 277 inlet;
#X obj 45 367 outlet;
#X text 23 254 bang for output;
#X obj 624 241 bng 15 250 50 0 empty empty clear_list 17 7 0 10 -262144
-1 -1;
#X msg 511 298 0;
#X obj 511 319 s \$0-possible_states_rec;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-markov 9 float 2;
#X coords 0 903 9 0 200 140 1 0 0;
#X restore 67 26 graph;
#X msg 692 329 \; \$1-markov const 0;
#X obj 693 308 f \$0;
#X obj 691 286 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 23 682 418 resize_array_logic 0;
#N canvas 0 23 450 300 max_in_list 0;
#X obj 37 37 inlet;
#X obj 37 91 list split 1;
#X obj 62 127 list;
#X obj 39 182 t b f, f 19;
#X obj 134 233 max, f 12;
#X obj 134 254 f;
#X obj 37 59 t l b;
#X msg 191 95 -1;
#X text 218 94 reset max object;
#X obj 134 275 outlet;
#X connect 0 0 6 0;
#X connect 1 0 3 0;
#X connect 1 1 2 1;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 3 1 4 0;
#X connect 4 0 5 0;
#X connect 5 0 4 1;
#X connect 5 0 9 0;
#X connect 6 0 1 0;
#X connect 6 1 7 0;
#X connect 7 0 4 1;
#X restore 94 56 pd max_in_list;
#X obj 109 118 r \$0-possible_states_snd;
#X obj 90 139 max;
#X text 261 140 check if maximum value is greater than current possible
states;
#X text 260 164 if so resize arrays;
#X obj 94 77 + 1;
#X obj 87 16 inlet;
#X obj 94 268 *;
#X msg 156 246 resize \$1;
#X obj 156 267 array define -yrange 0 1 \$0-markov_layer2 1;
#X obj 94 215 int;
#X obj 94 247 t f f f;
#X obj 95 314 array size \$0-markov;
#X obj 144 193 s \$0-possible_states_rec;
#X connect 0 0 5 0;
#X connect 1 0 2 1;
#X connect 2 0 10 0;
#X connect 2 0 13 0;
#X connect 5 0 2 0;
#X connect 6 0 0 0;
#X connect 7 0 12 0;
#X connect 8 0 9 0;
#X connect 10 0 11 0;
#X connect 11 0 7 0;
#X connect 11 1 7 1;
#X connect 11 2 8 0;
#X restore 420 359 pd resize_array_logic;
#N canvas 0 23 694 411 create_transistion_table 0;
#N canvas 0 23 450 300 itemize_list 0;
#X obj 86 23 inlet;
#X obj 69 210 outlet;
#X obj 88 77 list split 1;
#X obj 133 103 list, f 6;
#X obj 88 98 t b f;
#X connect 0 0 2 0;
#X connect 2 0 4 0;
#X connect 2 1 3 1;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 1 1 0;
#X restore 120 154 pd itemize_list;
#X obj 155 273 tabread \$0-markov;
#X obj 155 294 + 1;
#X obj 120 87 list split 1;
#X obj 120 108 t f f, f 25;
#X obj 120 129 list prepend;
#X obj 155 317 pack, f 22;
#X obj 155 337 tabwrite \$0-markov;
#X text 306 109 set first value as last state and append to list (makes
the whole list a loop);
#X obj 278 142 r \$0-possible_states_snd;
#X obj 267 174 *;
#X obj 157 208 +;
#X obj 120 175 t f f;
#X obj 157 229 t f f, f 22;
#X obj 142 40 inlet;
#X connect 0 0 12 0;
#X connect 1 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 4 0;
#X connect 3 1 5 1;
#X connect 4 0 5 0;
#X connect 4 1 10 0;
#X connect 5 0 0 0;
#X connect 6 0 7 0;
#X connect 9 0 10 1;
#X connect 10 0 11 1;
#X connect 11 0 13 0;
#X connect 12 0 10 0;
#X connect 12 1 11 0;
#X connect 13 0 1 0;
#X connect 13 1 6 1;
#X connect 14 0 3 0;
#X restore 336 384 pd create_transistion_table;
#N canvas 0 23 450 300 change_graph_display 0;
#X obj 146 59 inlet;
#X obj 146 84 array max \$0-markov;
#X floatatom 146 105 5 0 0 0 - - -;
#X text 10 85 get max value in array;
#X obj 146 125 t b f;
#X obj 213 108 r \$0-possible_states_snd;
#X obj 104 113 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 146 193 pack 0 0 0;
#X obj 114 158 f \$0;
#X obj 213 129 t f f;
#X obj 213 150 *;
#X msg 146 216 \; \$1-markov bounds 0 \$2 \$3 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 4 0 8 0;
#X connect 4 1 7 1;
#X connect 5 0 9 0;
#X connect 6 0 2 0;
#X connect 7 0 11 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 7 2;
#X restore 278 340 pd change_graph_display;
#X obj 509 241 inlet;
#X text 512 224 clear;
#X obj 235 302 t b b l l, f 25;
#X obj 213 363 array random \$0-markov;
#X obj 213 384 %;
#X obj 237 408 r \$0-possible_states_snd;
#X obj 509 262 t b b;
#X text 209 258 training data as a list;
#X text 624 425 sjf \, SAE London \, 2020;
#X connect 1 0 2 0;
#X connect 2 0 5 0;
#X connect 3 0 19 0;
#X connect 4 0 1 0;
#X connect 7 0 8 0;
#X connect 7 0 13 0;
#X connect 8 0 9 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 17 0 23 0;
#X connect 19 0 20 0;
#X connect 19 1 16 0;
#X connect 19 2 15 0;
#X connect 19 3 14 0;
#X connect 20 0 21 0;
#X connect 21 0 1 1;
#X connect 22 0 21 1;
#X connect 23 0 8 0;
#X connect 23 1 12 0;
